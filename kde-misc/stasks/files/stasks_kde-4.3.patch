diff -C 5 -w -E -- stasks-0.5.1_old/applet/stasks_applet.cpp stasks-0.5.1/applet/stasks_applet.cpp
*** stasks-0.5.1_old/applet/stasks_applet.cpp	Sun Mar 22 03:18:21 2009
--- stasks-0.5.1/applet/stasks_applet.cpp	Thu Jul  2 01:13:42 2009
***************
*** 71,83 ****
  
      Plasma::Containment* appletContainment = containment();
      if (appletContainment) m_groupManager->setScreen(appletContainment->screen());
      
      connect(this, SIGNAL(settingsChanged()), m_groupManager, SLOT(reconnect()));
!     connect(m_groupManager->rootGroup(), SIGNAL(itemAdded(AbstractItemPtr)), this, SLOT(itemAdded(AbstractItemPtr)));
!     connect(m_groupManager->rootGroup(), SIGNAL(itemRemoved(AbstractItemPtr)), this, SLOT(itemRemoved(AbstractItemPtr)));
!     connect(m_groupManager->rootGroup(), SIGNAL(itemPositionChanged(AbstractItemPtr)), SLOT(itemPositionChanged(AbstractItemPtr)));
      connect(this, SIGNAL(settingsChanged()), this, SLOT(configuration()));
  
      m_layout = new QGraphicsLinearLayout(this);
      m_layout->setContentsMargins(0, 0, 0, 0);
      m_layout->addStretch();
--- 71,83 ----
  
      Plasma::Containment* appletContainment = containment();
      if (appletContainment) m_groupManager->setScreen(appletContainment->screen());
      
      connect(this, SIGNAL(settingsChanged()), m_groupManager, SLOT(reconnect()));
!     connect(m_groupManager->rootGroup(), SIGNAL(itemAdded(AbstractGroupableItem *)), this, SLOT(itemAdded(AbstractGroupableItem *)));
!     connect(m_groupManager->rootGroup(), SIGNAL(itemRemoved(AbstractGroupableItem *)), this, SLOT(itemRemoved(AbstractGroupableItem *)));
!     connect(m_groupManager->rootGroup(), SIGNAL(itemPositionChanged(AbstractGroupableItem *)), SLOT(itemPositionChanged(AbstractGroupableItem *)));
      connect(this, SIGNAL(settingsChanged()), this, SLOT(configuration()));
  
      m_layout = new QGraphicsLinearLayout(this);
      m_layout->setContentsMargins(0, 0, 0, 0);
      m_layout->addStretch();
***************
*** 85,95 ****
      emit settingsChanged();
      updateSize();
      setSizePolicy(QSizePolicy(QSizePolicy::Expanding,QSizePolicy::Expanding));
      setMaximumSize(INT_MAX,INT_MAX);
  }
! void STasksApplet::itemAdded(TaskManager::AbstractItemPtr groupableItem)
  {
      STasksItem *item = new STasksItem(groupableItem, this);
      if (m_items.contains(item)) 
      {
          kDebug() << "already exist";
--- 85,95 ----
      emit settingsChanged();
      updateSize();
      setSizePolicy(QSizePolicy(QSizePolicy::Expanding,QSizePolicy::Expanding));
      setMaximumSize(INT_MAX,INT_MAX);
  }
! void STasksApplet::itemAdded(TaskManager::AbstractGroupableItem * groupableItem)
  {
      STasksItem *item = new STasksItem(groupableItem, this);
      if (m_items.contains(item)) 
      {
          kDebug() << "already exist";
***************
*** 104,114 ****
      m_layout->insertItem(m_layout->count()-1,item);
      m_layout->activate();
      m_tasksHash[groupableItem] = item;
  
  }
! void STasksApplet::itemRemoved(TaskManager::AbstractItemPtr groupableItem)
  {
      STasksItem* item = m_tasksHash[groupableItem];
      if(item == 0) 
      {
  	kDebug() << "trying to remove non-existant task";
--- 104,114 ----
      m_layout->insertItem(m_layout->count()-1,item);
      m_layout->activate();
      m_tasksHash[groupableItem] = item;
  
  }
! void STasksApplet::itemRemoved(TaskManager::AbstractGroupableItem * groupableItem)
  {
      STasksItem* item = m_tasksHash[groupableItem];
      if(item == 0) 
      {
  	kDebug() << "trying to remove non-existant task";
***************
*** 118,128 ****
      m_items.removeAll(item);
      m_layout->removeItem(item);
      m_layout->activate();
      delete item;
  }
! void STasksApplet::itemPositionChanged(AbstractItemPtr groupableItem)
  {
      STasksItem* item = m_tasksHash[groupableItem];
      if (!m_items.contains(item))
      return;
      int index = m_groupManager->rootGroup()->members().indexOf(groupableItem);
--- 118,128 ----
      m_items.removeAll(item);
      m_layout->removeItem(item);
      m_layout->activate();
      delete item;
  }
! void STasksApplet::itemPositionChanged(TaskManager::AbstractGroupableItem * groupableItem)
  {
      STasksItem* item = m_tasksHash[groupableItem];
      if (!m_items.contains(item))
      return;
      int index = m_groupManager->rootGroup()->members().indexOf(groupableItem);
***************
*** 136,146 ****
  void STasksApplet::reload()
  {
      m_items.clear();
      m_tasksHash.clear();
      
!     foreach(TaskManager::AbstractItemPtr item,m_groupManager->rootGroup()->members() ) 
      {
  	itemAdded(item);
      }
  }
  void STasksApplet::constraintsEvent(Plasma::Constraints constraints)
--- 136,146 ----
  void STasksApplet::reload()
  {
      m_items.clear();
      m_tasksHash.clear();
      
!     foreach(AbstractGroupableItem *item, m_groupManager->rootGroup()->members() ) 
      {
  	itemAdded(item);
      }
  }
  void STasksApplet::constraintsEvent(Plasma::Constraints constraints)
***************
*** 151,160 ****
--- 151,162 ----
      }
      if (constraints & Plasma::LocationConstraint)
      {
          m_layout->setOrientation((formFactor() == Plasma::Vertical)?Qt::Vertical:Qt::Horizontal);
      }
+ 
+ 		setSizePolicy(QSizePolicy(QSizePolicy::Expanding, QSizePolicy::Expanding));
  }
  void STasksApplet::updateSize()
  {
      if (formFactor() == Plasma::Vertical)
      {
***************
*** 269,279 ****
  	else
  	count++;
      }
      return count;
  }
! AbstractItemPtr STasksApplet::selectSubTask(int index)
  {
  
      foreach(STasksItem *item, m_items) 
      {
  	if (item->task()->type()==STasksTask::Group)
--- 271,281 ----
  	else
  	count++;
      }
      return count;
  }
! AbstractGroupableItem * STasksApplet::selectSubTask(int index)
  {
  
      foreach(STasksItem *item, m_items) 
      {
    if (item->task()->type()==STasksTask::Group)
***************
*** 343,360 ****
               m_activeIconIndex = subTasks - 1; //last item is a spacer
          }
      }
  
      //kDebug() << "Wheel event m_activeTaskIndex: " << m_activeTaskIndex << " of " << subTasks;
!     AbstractItemPtr taskItem = selectSubTask( m_activeIconIndex);
!     if (taskItem) 
!     {
! 	if (!taskItem->isGroupItem())
! 	{
  	    TaskManager::TaskItem* task = static_cast<TaskManager::TaskItem*>(taskItem);
! 	    if (task->task())
! 	    task->task()->activate();
  	}
      }
  }
  void STasksApplet::expandTasksChanged(int state)
  {
--- 345,359 ----
               m_activeIconIndex = subTasks - 1; //last item is a spacer
          }
      }
  
      //kDebug() << "Wheel event m_activeTaskIndex: " << m_activeTaskIndex << " of " << subTasks;
!     AbstractGroupableItem *taskItem = selectSubTask( m_activeIconIndex);
!     if (taskItem) {
!       if (!taskItem->isGroupItem()){
  	TaskManager::TaskItem* task = static_cast<TaskManager::TaskItem*>(taskItem);
! 	if (task->task()) task->task()->activateRaiseOrIconify();
        }
      }
  }
  void STasksApplet::expandTasksChanged(int state)
  {
diff -C 5 -w -E -- stasks-0.5.1_old/applet/stasks_applet.h stasks-0.5.1/applet/stasks_applet.h
*** stasks-0.5.1_old/applet/stasks_applet.h	Sun Mar 22 01:22:42 2009
--- stasks-0.5.1/applet/stasks_applet.h	Thu Jul  2 00:00:51 2009
***************
*** 49,59 ****
  
  using TaskManager::StartupPtr;
  using TaskManager::TaskPtr;
  using TaskManager::StartupPtr;
  using TaskManager::GroupPtr;
- using TaskManager::AbstractItemPtr;
  using TaskManager::AbstractGroupableItem;
  using TaskManager::GroupManager;
  using TaskManager::TaskItem;
  using TaskManager::TaskGroup;
  
--- 49,58 ----
***************
*** 86,103 ****
  	int animationDuration() {return m_animationDuration;}	
  	int iconShape() {return m_shape;}
  	int fps() {return 35;}
      private:
  	QGraphicsLinearLayout *m_layout;
! 	QHash<AbstractItemPtr, STasksItem*> m_tasksHash;
  	qreal m_iconSize;
  	Ui::stasksConfigG m_configG;
  	Ui::stasksConfigA m_configA;
  	void reload();
  	void constraintsEvent(Plasma::Constraints constraints);
  	int totalSubTasks();
! 	AbstractItemPtr selectSubTask(int index);
  	int activeIndex();
  	//task
          TaskManager::GroupManager::TaskGroupingStrategy m_groupingStrategy;
  	TaskManager::GroupManager::TaskSortingStrategy m_sortingStrategy;
  	//config
--- 85,102 ----
  	int animationDuration() {return m_animationDuration;}	
  	int iconShape() {return m_shape;}
  	int fps() {return 35;}
      private:
  	QGraphicsLinearLayout *m_layout;
! 	QHash<AbstractGroupableItem *, STasksItem*> m_tasksHash;
  	qreal m_iconSize;
  	Ui::stasksConfigG m_configG;
  	Ui::stasksConfigA m_configA;
  	void reload();
  	void constraintsEvent(Plasma::Constraints constraints);
  	int totalSubTasks();
! 	AbstractGroupableItem * selectSubTask(int index);
  	int activeIndex();
  	//task
          TaskManager::GroupManager::TaskGroupingStrategy m_groupingStrategy;
  	TaskManager::GroupManager::TaskSortingStrategy m_sortingStrategy;
  	//config
***************
*** 117,133 ****
          void wheelEvent(QGraphicsSceneWheelEvent *event);
  
      public slots:
  	void updateSize();
  	void updateActiveIconIndex(STasksItem *item);
! 	void itemPositionChanged(AbstractItemPtr groupableItem);
  	void expandTasksChanged(int state);
  	void lightColorChanged(int state);
      private slots:
  	void configuration();
! 	void itemAdded(AbstractItemPtr groupableItem);
! 	void itemRemoved(AbstractItemPtr groupableItem);
      protected slots:
          void configAccepted();
      signals:
  	void settingsChanged();
          void setSize(qreal size);
--- 116,132 ----
          void wheelEvent(QGraphicsSceneWheelEvent *event);
  
      public slots:
  	void updateSize();
  	void updateActiveIconIndex(STasksItem *item);
! 	void itemPositionChanged(AbstractGroupableItem *);
  	void expandTasksChanged(int state);
  	void lightColorChanged(int state);
      private slots:
  	void configuration();
! 	void itemAdded(AbstractGroupableItem *);
! 	void itemRemoved(AbstractGroupableItem *);
      protected slots:
          void configAccepted();
      signals:
  	void settingsChanged();
          void setSize(qreal size);
diff -C 5 -w -E -- stasks-0.5.1_old/applet/stasks_task.cpp stasks-0.5.1/applet/stasks_task.cpp
*** stasks-0.5.1_old/applet/stasks_task.cpp	Sun Mar 22 00:51:03 2009
--- stasks-0.5.1/applet/stasks_task.cpp	Thu Jul  2 00:22:03 2009
***************
*** 153,163 ****
  }
  TaskPtr STasksTask::task()
  {
      return m_task->task();
  }
! TaskManager::AbstractItemPtr STasksTask::abstractItem()
  {
      return m_abstractItem;
  }
  TaskManager::TaskItem* STasksTask::taskItem()
  {
--- 153,163 ----
  }
  TaskPtr STasksTask::task()
  {
      return m_task->task();
  }
! TaskManager::AbstractGroupableItem* STasksTask::abstractItem()
  {
      return m_abstractItem;
  }
  TaskManager::TaskItem* STasksTask::taskItem()
  {
diff -C 5 -w -E -- stasks-0.5.1_old/applet/stasks_task.h stasks-0.5.1/applet/stasks_task.h
*** stasks-0.5.1_old/applet/stasks_task.h	Sun Mar 22 00:50:37 2009
--- stasks-0.5.1/applet/stasks_task.h	Wed Jul  1 23:05:16 2009
***************
*** 41,51 ****
  
  using TaskManager::StartupPtr;
  using TaskManager::TaskPtr;
  using TaskManager::StartupPtr;
  using TaskManager::GroupPtr;
- using TaskManager::AbstractItemPtr;
  using TaskManager::AbstractGroupableItem;
  using TaskManager::GroupManager;
  using TaskManager::TaskItem;
  using TaskManager::TaskGroup;
  
--- 41,50 ----
***************
*** 76,86 ****
  	void setText(const QString &text);
  	QString text();
  	QString description();
  	int desktop();
  	TaskPtr task();
! 	TaskManager::AbstractItemPtr abstractItem();
  	GroupPtr group();
  	TaskManager::TaskItem* taskItem();
  	StartupPtr startup();
  	void popup(QPoint point);
  	TaskFlags flags();
--- 75,85 ----
  	void setText(const QString &text);
  	QString text();
  	QString description();
  	int desktop();
  	TaskPtr task();
! 	TaskManager::AbstractGroupableItem * abstractItem();
  	GroupPtr group();
  	TaskManager::TaskItem* taskItem();
  	StartupPtr startup();
  	void popup(QPoint point);
  	TaskFlags flags();
***************
*** 90,100 ****
  	void setWindowTask(TaskManager::TaskItem* taskItem);
  	TaskManager::TaskItem* m_task;
  	TaskManager::TaskGroup* m_group;
  	STasksApplet *m_applet;
  
! 	TaskManager::AbstractItemPtr m_abstractItem;
  	TaskFlags m_flags;
          ItemType m_type;
      private slots:
  	void updateTask(::TaskManager::TaskChanges changes);
  	void gotTaskPointer();
--- 89,99 ----
  	void setWindowTask(TaskManager::TaskItem* taskItem);
  	TaskManager::TaskItem* m_task;
  	TaskManager::TaskGroup* m_group;
  	STasksApplet *m_applet;
  
! 	TaskManager::AbstractGroupableItem * m_abstractItem;
  	TaskFlags m_flags;
          ItemType m_type;
      private slots:
  	void updateTask(::TaskManager::TaskChanges changes);
  	void gotTaskPointer();
diff -C 5 -w -E -- stasks-0.5.1_old/applet/stasks_tooltip.cpp stasks-0.5.1/applet/stasks_tooltip.cpp
*** stasks-0.5.1_old/applet/stasks_tooltip.cpp	Sun Mar 22 00:37:38 2009
--- stasks-0.5.1/applet/stasks_tooltip.cpp	Wed Jun  3 21:51:04 2009
***************
*** 73,82 ****
--- 73,83 ----
  	}
  };
  
  STasksToolTip::STasksToolTip(int size, QWidget *parent) : QWidget(parent)
  {
+     setAttribute(Qt::WA_TranslucentBackground);
      setWindowFlags(Qt::ToolTip);
  
      m_size = size;
  
      m_canHide = true;
Common subdirectories: stasks-0.5.1_old/applet/ui and stasks-0.5.1/applet/ui
