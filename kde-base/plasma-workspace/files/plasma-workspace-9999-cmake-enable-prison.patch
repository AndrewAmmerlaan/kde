diff --git a/klipper/CMakeLists.txt b/klipper/CMakeLists.txt
index 7a57b30b8b59a77c3d0702095dd72bb275d22e57..a46ac2def2faed4b0452c99cca6323da0adba348 100644
--- a/klipper/CMakeLists.txt
+++ b/klipper/CMakeLists.txt
@@ -16,15 +16,15 @@ set(libklipper_common_SRCS
     clipcommandprocess.cpp
 )
 
-# find_package(Prison QUIET CONFIG)
-# set_package_properties(Prison PROPERTIES DESCRIPTION "Prison library"
-#                        URL "http://projects.kde.org/prison"
-#                        TYPE OPTIONAL
-#                        PURPOSE "Needed to create mobile barcodes from clipboard data"
-#                       )
-# if (PRISON_FOUND)
-#     include_directories(${PRISON_INCLUDE_DIR})
-# endif ()
+find_package(Prison "1.2.0" QUIET CONFIG)
+set_package_properties(Prison PROPERTIES DESCRIPTION "Prison library"
+                       URL "http://projects.kde.org/prison"
+                       TYPE OPTIONAL
+                       PURPOSE "Needed to create mobile barcodes from clipboard data"
+                      )
+if (PRISON_FOUND)
+    include_directories(${PRISON_INCLUDE_DIR})
+endif ()
 
 set(HAVE_PRISON ${PRISON_FOUND})
 configure_file(config-klipper.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config-klipper.h )
@@ -52,9 +52,9 @@ target_link_libraries(kdeinit_klipper
 if (X11_Xfixes_FOUND)
   target_link_libraries(kdeinit_klipper ${X11_Xfixes_LIB})
 endif ()
-# if (PRISON_FOUND)
-#   target_link_libraries(kdeinit_klipper ${PRISON_LIBRARIES})
-# endif ()
+if (PRISON_FOUND)
+  target_link_libraries(kdeinit_klipper ${PRISON_LIBRARIES})
+endif ()
 
 install(TARGETS kdeinit_klipper ${INSTALL_TARGETS_DEFAULT_ARGS})
 install(TARGETS klipper         ${INSTALL_TARGETS_DEFAULT_ARGS})
diff --git a/klipper/klipper.cpp b/klipper/klipper.cpp
index 1ce578afb078b3b4e791e780975802082559bdf4..8847af324ff0c0c8e07d7e69ca473945cf001772 100644
--- a/klipper/klipper.cpp
+++ b/klipper/klipper.cpp
@@ -887,10 +887,12 @@ void Klipper::slotShowBarcode()
     using namespace prison;
     const HistoryStringItem* item = dynamic_cast<const HistoryStringItem*>(m_history->first());
 
-    KDialog dlg;
+    QDialog dlg;
     dlg.setModal( true );
-    dlg.setCaption( i18n("Mobile Barcode") );
-    dlg.setButtons( KDialog::Ok );
+    dlg.setWindowTitle( i18n("Mobile Barcode") );
+    QDialogButtonBox *buttons = new QDialogButtonBox(QDialogButtonBox::Ok, &dlg);
+    buttons->button(QDialogButtonBox::Ok)->setShortcut(Qt::CTRL | Qt::Key_Return);
+    connect(buttons, &QDialogButtonBox::accepted, &dlg, &QDialog::accept);
 
     QWidget* mw = new QWidget(&dlg);
     QHBoxLayout* layout = new QHBoxLayout(mw);
@@ -907,7 +909,9 @@ void Klipper::slotShowBarcode()
     layout->addWidget(datamatrix);
 
     mw->setFocus();
-    dlg.setMainWidget( mw );
+    QVBoxLayout *vBox = new QVBoxLayout(&dlg);
+    vBox->addWidget(mw);
+    vBox->addWidget(buttons);
     dlg.adjustSize();
 
     dlg.exec();
