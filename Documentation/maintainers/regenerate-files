#!/bin/bash

# Make sure that all systems have the same sort order and date format
export LC_ALL=C

SCRIPT=`basename $0`
if [[ ! -f "${PWD}/${SCRIPT}" ]]; then
	echo "You need to be in '"`dirname $0`"' dir to run this script."
	exit -1
fi

HEADER="# Autogenerated by ${SCRIPT}, DO NOT EDIT."

# regenerate keywords
pushd ../package.keywords/ > /dev/null
for release in 4.3 4.4; do
	echo -e "${HEADER}" > "kde-${release}.keywords"
	if [[ -d "kde-${release}.d" ]]; then
		cat "kde-${release}.d/"* | sed '/^~.*[.-]9999$/s/$/ **/' >> "kde-${release}.keywords"
	fi
done

# ... and for completely unkeyworded packages, add "**"
for release in 4.4; do
	if [[ -d "kde-${release}.d" ]]; then
		rm -rf "kde-${release}.9999.d"
		mkdir -p "kde-${release}.9999.d"
		echo -e "${HEADER}" > "kde-${release}.9999.keywords"
		for file in "kde-${release}.d"/*; do
			newfile="kde-${release}.9999.d"/$(basename "${file}")
			sed "/^kde-base\/.*:${release}$/{s/:${release}/-${release}.9999/;s/^/~/};/^~.*[.-]9999$/s/$/ **/" "${file}" > "${newfile}"
		done
		cat "kde-${release}.9999.d"/* >> "kde-${release}.9999.keywords"
	fi
done

if [[ -d kde-live.base ]]; then
	rm -rf kde-live.d
	mkdir -p kde-live.d
	echo -e "${HEADER}" > kde-live.keywords
	for file in kde-live.base/*; do
		newfile=kde-live.d/$(basename "${file}")
		sed '/^kde-base\/.*:live$/{s/:live/-9999/;s/^/~/};/^~.*[.-]9999$/s/$/ **/' "${file}" > "${newfile}"
	done
	cat kde-live.d/* >> kde-live.keywords
fi

for set in kde-extras-live koffice-live; do
	if [[ -e "../../sets/${set}" ]]; then
		echo -e "${HEADER}" > "${set}.keywords"
		sed '/^~.*[.-]9999$/s/$/ **/' "../../sets/${set}" >> "${set}.keywords"
		[[ ${set} == koffice-live ]] && echo "~app-office/koffice-meta-9999 **" >> "${set}.keywords"
	fi
done

popd > /dev/null

# regenerate unmask entries (base for package mask)
pushd ../package.unmask/ > /dev/null
for release in 4.3 4.4 live; do
	echo -e "${HEADER}" > "kde-${release}"
	if [[ -d "kde-${release}.d" ]]; then
		cat "kde-${release}.d/"* >> "kde-${release}"
	fi
done
popd > /dev/null

# regenerate package mask
pushd ../../profiles/ > /dev/null
echo -e "\
${HEADER}
# Edit profiles/package.mask.d/ files instead." > package.mask
if [[ -d package.mask.d ]]; then
	for masks in package.mask.d/*; do
		echo >> package.mask
		cat ${masks} >> package.mask
	done
fi
popd > /dev/null
