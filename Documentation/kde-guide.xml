<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header$ -->
<guide link="proj/en/desktop/kde/kde4.xml" lang="en">
<title>Gentoo KDE 4.1 Guide</title>
<author title="Author">
	<mail link="tomas.chvatal@gmail.com">Tomáš Chvátal</mail>
</author>
<abstract>
This guide shows how to setup KDE-4.1 from kde-herd git overlay.
Will be updated for tree update later.
</abstract>
<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>
<version>0.1</version>
<date>2008-09-19</date>
<chapter>
	<title>Cleaning up</title>
	<section>
		<title>Removing old KDE</title>
		<body>
			<p>First we need clean enviroment so you need to uninstall any beta or 4.0.X release (uninstall is needed if you are moving from any other overlay too). This can be done by many ways for ease here is one solution pointed by alexxy:</p>
			<pre caption="Unmerging commands">
# <i>emerge -C @kde-4.1 @kdebase-4.1</i> <comment>(only if you are comming from kdesvn-portage)</comment>
# <i>emerge -C $(qfile -C -q -e /usr/kde/%PREFIX%)</i> <comment>(replace %PREFIX% with your kde version eg. 3.5)</comment></pre>
# <i>emerge -C @kde-3.5</i> <comment>(if you want to remove kde-3.5)</comment>
			<p>After this step you should have some dependant packages which are not installed into KDEPREFIX still on your system. This should not make any problem but if you want to remove them you can use little command. This will remove all packages we keep in overlay.</p>
			<warn>Beware that this does not check for package dependecies!</warn>
			<pre caption="Unmerging commands (only applicable if you are moving from other overlay)">
# <i>cd /path/to/old/overlay/</i>
# <i>emerge -C $(find ./ -name \*.ebuild |sed -e "s:.ebuild::" -e "s:./::" |awk -F'/' '{print "="$1"/"$3}')</i></pre>
			<p>And as final step you should remove old overlay so there is no blockage with our ebuilds. Also second thing you should make sure is removing old unmask keyword data files for old KDE4</p>
		</body>
	</section>
</chapter>
<chapter>
	<title>Grabbing overlay</title>
	<section>
		<title>Using layman</title>
		<body>
			<pre caption="layman command">
# <i>layman -fS; layman -a kde-testing</i></pre>
		</body>
	</section>
	<section>
		<title>Using git command</title>
		<body>
			<pre caption="git command">
# <i>git clone git://git.overlays.gentoo.org/proj/kde.git /PATH/WHERE/TO/PUT/OVERLAY</i></pre>
		</body>
	</section>
	<body>
		<note>Don't forget to modify /etc/make.conf where should be added path to our new overlay.</note>
	</body>
</chapter>
<chapter>
	<title>Unmasking/Keywording</title>
	<p>KDE in kde-test in not masked so it does not need unmasking. Only thing you need is keywording kde for TESTING arch. This means that all of you, which use testing now, have pretty much nothing to do in this step. For those running the stable tree in Gentoo solution is following.</p>
	<section>
		<title>Usage of our bundled file</title>
		<body>
		<note>This is recomended way of doing this for non experienced users.</note>
		<p>With our overlay we bundle package.keywords file which is needed to be added into your package.keywords file/directory. You can find this file in "Documentation/package.keywords" directory. Just copy it on correct location "/etc/portage/package.keywords/" or put it at the end of your "/etc/portage/package.keywords" file.</p>
		</body>
	</section>
	<section>
		<title>You use package.keywords as directory</title>
		<body>
			<pre caption="keywording command">
# <i>cd /path/to/our/overlay/</i>
# <i>find ./ -name \*.ebuild |sed -e "s:.ebuild::" -e "s:./::" |awk -F'/' '{print $1"/"$2}'  >> /etc/portage/package.keywords/kde4x</i>
# <i>cd /usr/portage/</i>
# <i>find ./x11-libs/qt-* -type d |sed -e "s:./::" |awk -F'/' '{print $1"/"$2}' | uniq >> /etc/portage/package.keywords/kde4x</i></pre>
		</body>
	</section>
	<section>
		<title>You use package.keywords as file</title>
		<body>
			<pre caption="keywording command">
# <i>cd /path/to/our/overlay/</i>
# <i>find ./ -name \*.ebuild |sed -e "s:.ebuild::" -e "s:./::" |awk -F'/' '{print $1"/"$2}' >> /etc/portage/package.keywords</i>
# <i>cd /usr/portage/</i>
# <i>find ./x11-libs/qt-* -type d |sed -e "s:./::" |awk -F'/' '{print $1"/"$2}' | uniq >> /etc/portage/package.keywords</i></pre>
		</body>
	</section>
	<body>
		<note>Don't forget there are still some dependencies that needs keywording, but are not in this list. So keyword them by yoursef.</note>
	</body>
</chapter>
<chapter>
	<title>Installation</title>
	<section>
		<title>USE kdeprefix</title>
		<body>
			<p>First let us describe our new variable which is really important on how kde installs.</p>
			<p>If kdeprefix is disabled (default) KDE installs as FHS. It means all files are put into /usr/ and we dont have to mantain it separately in /usr/kde/VERSION/ directory. This is desired behavior for most users. You do not belong between most users if you want more versions of kde aside.</p>
			<note>This does not count any 3.X version, you can keep non kdeprefix version of 4.1 and 3.X aside working.</note>
			<p>If kdeprefix is enabled KDE installs as usually into /usr/kde/VERSION which leaves you chance to use kde-4.1 and ie. kde-9999 ebuilds aside.</p>
			<note>"Error during set creation: Redefinition of set 'live-rebuild' (sections: 'live-rebuild', 'kde4-overlay sets')" is pretty harmless so dont bother about it :]</note>
			<warn>If you want to move between kdeprefix and -kdeprefix, unmerge KDE first. Then emerge it with enabled flag. Otherwise you more like broke everything!</warn>
		</body>
	</section>
	<section>
		<title>Using meta packages</title>
		<body>
			<note>This metod will be removed in next releases and is for backward compatibility with old portage.</note>
			<pre caption="emerge command">
# <i>emerge kde-meta:4 &amp;&amp; emerge kde-l10n</i></pre>
		</body>
	</section>
	<section>
		<title>Using sets</title>
		<body>
			<p>This is our brand new stuff which allows us portage-2.2.</p>
			<pre caption="emerge command">
# <i>emerge @kde-4x &amp;&amp; emerge kde-l10n</i></pre>
		<note>For those of you eager to see sets in action, we bundle also set for kde-3.5 its name is suprisingly @kde-3.5 :]. You can use this set either to install or uninstall 3.5 version of kde.</note>
		</body>
	</section>
	<body>
		<note>If you experience some errors with emerging @kde-4x than you use portage-2.2_rc8 and you need to patch your portage with: <a href="http://dev.gentoo.org/~zmedico/tmp/sets_in_sets.patch">http://dev.gentoo.org/~zmedico/tmp/sets_in_sets.patch</a>.</note>
	</body>
</chapter>
<chapter>
	<title>Configuration</title>
	<body>
		<p>Well we all know that our config files are kept for us in our HOME directory. But where that is the key. For KDE 3.X it is in ~/.kde and for KDE 4.X it is in ~/.kde4/ if you have it anywhere else from your other overlay please rename the directory for correct one if you want to use your old config.</p>
		<warn>Am I correct here? I am not sure...</warn>
	</body>
</chapter>
<chapter>
	<title>Migration from KDE 3.X</title>
	<section>
		<title>Configuration transition</title>
		<body>
			<p>TODO</p>
		</body>
	</section>
	<section>
		<title>No Desktop icon</title>
		<body>
			<p>KDE 4 as it moves towards semantic desktop did not bundle any icon for the desktop at all. As you can see there is actualy no desktop.</p>
			<p>Solution on howto fix this problem is replace desktop icon by folder one.</p>
			<pre caption="sed command">
$ <i>sed -i -e "s:Icon=desktop:Icon=folder:g" ~/Desktop/.directory</i></pre>
		</body>
	</section>
</chapter>
<chapter>
	<title>Hints</title>
	<section>
		<title>kde-misc/plasmoids</title>
		<body>
			<p>This ebuild contains various plasma applets which user suggested to add (if you find some contact us that we should add it, please be sure it is not svn version and is working with kde-4.1).</p>
		</body>
	</section>
	<section>
		<title>x11-themes/plasma-themes</title>
		<body>
			<p>This ebuild contains various plasma themes. Suggestions for adding are same as for plasmoids.</p>
		</body>
	</section>
	<section>
		<title>x11-themes/gtk-engines-qt</title>
		<body>
			<p>This ebuild should be used if you want your gtk applications use same apperance as your Qt/KDE applications. Configuration can be found in systemsetings->Apperance->GTK Styles and Fonts.</p>
		</body>
	</section>
</chapter>
